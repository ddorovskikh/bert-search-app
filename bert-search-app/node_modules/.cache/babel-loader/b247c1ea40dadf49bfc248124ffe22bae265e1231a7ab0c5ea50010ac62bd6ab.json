{"ast":null,"code":"var _jsxFileName = \"/home/dasha/docker-k8s-test/bert-search-app/src/components/Table.tsx\";\nimport Line from './Line';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst itemsOnPage = [{\n  name: '5',\n  value: 5\n}, {\n  name: '10',\n  value: 10\n}, {\n  name: '25',\n  value: 25\n}, {\n  name: '50',\n  value: 50\n}];\nexport default function Table(props) {\n  /*\r\n  const [currentLimit, setCurrentLimit] = useState<number>(\r\n    props.hidePagination ? -1 : props.currentLimit ? props.currentLimit : 25,\r\n  );\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n    const updateLimit = (index: number) => {\r\n    const newLimit = itemsOnPage[index].value;\r\n    setCurrentLimit(newLimit);\r\n    setCurrentPage(1);\r\n    props.limitChange?.(newLimit);\r\n  };\r\n    const paginationHandler = (item: any) => {\r\n    setCurrentPage(item.value);\r\n    props.pageChange && props.pageChange(item.value, currentLimit);\r\n  };\r\n  */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: `divide-primary table w-force-full divide-y`,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"text-left text-sm font-bold leading-5 text-genom-black dark:text-neutral-50\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: props.columnData.map((item, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: `mr-8 whitespace-nowrap p-3 ${item.widthStyle ? item.widthStyle : ''}`,\n            children: item.title\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"divide-primary divide-y\",\n        children: props.tableData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-sm leading-5 text-genom-black hover:bg-genom-bg-gray dark:text-neutral-50 dark:hover:bg-neutral-700\",\n          children: props.columnData.map((item1, index1) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `mr-8 p-3 ${item1.customStyle ? item1.customStyle : ''}`,\n            children: item[item1.columnName]\n          }, index1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      offsetTop: \"mt-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["Line","jsxDEV","_jsxDEV","Fragment","_Fragment","itemsOnPage","name","value","Table","props","children","className","columnData","map","item","index","widthStyle","title","fileName","_jsxFileName","lineNumber","columnNumber","tableData","item1","index1","customStyle","columnName","offsetTop","_c","$RefreshReg$"],"sources":["/home/dasha/docker-k8s-test/bert-search-app/src/components/Table.tsx"],"sourcesContent":["import type { ReactElement } from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport Line from './Line';\r\n\r\n\r\nexport interface IColumnData {\r\n  title: string;\r\n  columnName: string;\r\n  customStyle?: string;\r\n  widthStyle?: string;\r\n  stateData?: any;\r\n}\r\n\r\ninterface ITableProps {\r\n  columnData: IColumnData[];\r\n  tableData: any;\r\n}\r\n\r\nconst itemsOnPage = [\r\n  { name: '5', value: 5 },\r\n  { name: '10', value: 10 },\r\n  { name: '25', value: 25 },\r\n  { name: '50', value: 50 },\r\n];\r\n\r\nexport default function Table(props: ITableProps) {\r\n  /*\r\n  const [currentLimit, setCurrentLimit] = useState<number>(\r\n    props.hidePagination ? -1 : props.currentLimit ? props.currentLimit : 25,\r\n  );\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n\r\n  const updateLimit = (index: number) => {\r\n    const newLimit = itemsOnPage[index].value;\r\n    setCurrentLimit(newLimit);\r\n    setCurrentPage(1);\r\n    props.limitChange?.(newLimit);\r\n  };\r\n\r\n  const paginationHandler = (item: any) => {\r\n    setCurrentPage(item.value);\r\n    props.pageChange && props.pageChange(item.value, currentLimit);\r\n  };\r\n  */\r\n  return (\r\n    <>\r\n      <table className={`divide-primary table w-force-full divide-y`}>\r\n        <thead className=\"text-left text-sm font-bold leading-5 text-genom-black dark:text-neutral-50\">\r\n          <tr>\r\n            {props.columnData.map((item, index) => (\r\n              <th className={`mr-8 whitespace-nowrap p-3 ${item.widthStyle ? item.widthStyle : ''}`} key={index}>\r\n                {item.title}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"divide-primary divide-y\">\r\n          {props.tableData.map(\r\n            (item: any, index: number) =>\r\n               (\r\n                <tr\r\n                  className=\"text-sm leading-5 text-genom-black hover:bg-genom-bg-gray dark:text-neutral-50 dark:hover:bg-neutral-700\"\r\n                  key={index}\r\n                >\r\n                  {props.columnData.map((item1, index1) => (\r\n                    <td className={`mr-8 p-3 ${item1.customStyle ? item1.customStyle : ''}`} key={index1}>\r\n                      {item[item1.columnName]}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ),\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <Line offsetTop=\"mt-0\" />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAGA,OAAOA,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAgB1B,MAAMC,WAAW,GAAG,CAClB;EAAEC,IAAI,EAAE,GAAG;EAAEC,KAAK,EAAE;AAAE,CAAC,EACvB;EAAED,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAG,CAAC,EACzB;EAAED,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAG,CAAC,EACzB;EAAED,IAAI,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAG,CAAC,CAC1B;AAED,eAAe,SAASC,KAAKA,CAACC,KAAkB,EAAE;EAChD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGE,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAOS,SAAS,EAAG,4CAA4C;MAAAD,QAAA,gBAC7DR,OAAA;QAAOS,SAAS,EAAC,6EAA6E;QAAAD,QAAA,eAC5FR,OAAA;UAAAQ,QAAA,EACGD,KAAK,CAACG,UAAU,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAChCb,OAAA;YAAIS,SAAS,EAAG,8BAA6BG,IAAI,CAACE,UAAU,GAAGF,IAAI,CAACE,UAAU,GAAG,EAAG,EAAE;YAAAN,QAAA,EACnFI,IAAI,CAACG;UAAK,GAD+EF,KAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE7F,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRnB,OAAA;QAAOS,SAAS,EAAC,yBAAyB;QAAAD,QAAA,EACvCD,KAAK,CAACa,SAAS,CAACT,GAAG,CAClB,CAACC,IAAS,EAAEC,KAAa,kBAErBb,OAAA;UACES,SAAS,EAAC,0GAA0G;UAAAD,QAAA,EAGnHD,KAAK,CAACG,UAAU,CAACC,GAAG,CAAC,CAACU,KAAK,EAAEC,MAAM,kBAClCtB,OAAA;YAAIS,SAAS,EAAG,YAAWY,KAAK,CAACE,WAAW,GAAGF,KAAK,CAACE,WAAW,GAAG,EAAG,EAAE;YAAAf,QAAA,EACrEI,IAAI,CAACS,KAAK,CAACG,UAAU;UAAC,GADqDF,MAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhF,CACL;QAAC,GANGN,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOR,CAEV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRnB,OAAA,CAACF,IAAI;MAAC2B,SAAS,EAAC;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACzB,CAAC;AAEP;AAACO,EAAA,GApDuBpB,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
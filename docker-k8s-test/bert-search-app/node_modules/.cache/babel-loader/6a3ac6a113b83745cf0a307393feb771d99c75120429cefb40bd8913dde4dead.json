{"ast":null,"code":"var _jsxFileName = \"/home/dasha/docker-k8s-test/bert-search-app/src/components/Form.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Button from './Button';\nimport { SearchIcon } from './icons';\nimport TextInput from './TextInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//sendQuery(event.target)\nconst Form = props => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const changeHandler = e => {\n    setInputValue(e.currentTarget.value);\n    /*\r\n    if (props.changeHandler) {\r\n      props.changeHandler(e);\r\n    }\r\n    */\n  };\n\n  const buttonHandler = e => {\n    e.preventDefault();\n    if (props.changeHandler) {\n      props.changeHandler(inputValue);\n    }\n    //const button: HTMLButtonElement = event.currentTarget;\n    //setClickedButton(button.name);\n  };\n\n  const searchAction = input => {\n    if (typeof input !== 'string' || input.length === 0) {\n      return;\n    }\n    setInputValue(input);\n    props.changeHandler && props.changeHandler(input);\n  };\n\n  /*\r\n  <button onClick={buttonHandler} >\r\n    Найти\r\n  </button>\r\n  */\n  /*\r\n  <div className=\"my-2 flex h-8 w-1/4\">\r\n    <div className=\"flex w-full\">\r\n      <textarea onChange={changeHandler}/>\r\n      <div className=\"mr-6\">\r\n        <Button mode=\"normal\" text={'Найти'} clickHandler={buttonHandler} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  */\n  /*\r\n  <TextInput\r\n    placeholder={'Поиск'}\r\n    onChange={(newValue) => setInputValue(newValue)}\r\n    value={inputValue}\r\n  />\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-6 flex flex-wrap justify-between\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-6 flex\",\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          placeholder: 'Поиск',\n          onChange: newValue => setInputValue(newValue),\n          value: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          icon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this),\n          onClick: () => searchAction(inputValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Button","SearchIcon","TextInput","jsxDEV","_jsxDEV","Form","props","_s","inputValue","setInputValue","changeHandler","e","currentTarget","value","buttonHandler","preventDefault","searchAction","input","length","className","children","placeholder","onChange","newValue","fileName","_jsxFileName","lineNumber","columnNumber","type","icon","onClick","_c","$RefreshReg$"],"sources":["/home/dasha/docker-k8s-test/bert-search-app/src/components/Form.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\r\nimport type { ChangeEventHandler, ChangeEvent } from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport { SearchIcon } from './icons';\r\nimport TextInput from './TextInput';\r\n\r\ninterface ITextInputProps {\r\n  changeHandler?: any;\r\n}\r\n//sendQuery(event.target)\r\nconst Form = (props: ITextInputProps) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const changeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setInputValue(e.currentTarget.value);\r\n    /*\r\n    if (props.changeHandler) {\r\n      props.changeHandler(e);\r\n    }\r\n    */\r\n  };\r\n\r\n  const buttonHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    if (props.changeHandler) {\r\n      props.changeHandler(inputValue);\r\n    }\r\n    //const button: HTMLButtonElement = event.currentTarget;\r\n    //setClickedButton(button.name);\r\n  };\r\n  const searchAction = (input: string | unknown) => {\r\n    if (typeof input !== 'string' || input.length === 0) {\r\n      return;\r\n    }\r\n    setInputValue(input);\r\n    props.changeHandler && props.changeHandler(input);\r\n  }\r\n\r\n  /*\r\n  <button onClick={buttonHandler} >\r\n    Найти\r\n  </button>\r\n  */\r\n  /*\r\n  <div className=\"my-2 flex h-8 w-1/4\">\r\n    <div className=\"flex w-full\">\r\n      <textarea onChange={changeHandler}/>\r\n      <div className=\"mr-6\">\r\n        <Button mode=\"normal\" text={'Найти'} clickHandler={buttonHandler} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  */\r\n  /*\r\n  <TextInput\r\n    placeholder={'Поиск'}\r\n    onChange={(newValue) => setInputValue(newValue)}\r\n    value={inputValue}\r\n  />\r\n  */\r\n  return (\r\n        <div className=\"mt-6 flex flex-wrap justify-between\">\r\n          <div className=\"flex\">\r\n            <div className=\"mr-6 flex\">\r\n              <TextInput\r\n                placeholder={'Поиск'}\r\n                onChange={(newValue) => setInputValue(newValue)}\r\n                value={inputValue}\r\n              />\r\n              <Button\r\n                type=\"button\"\r\n                icon={<SearchIcon />}\r\n                onClick={() => searchAction(inputValue)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";;AAEA,SAASA,QAAQ,QAAmB,OAAO;AAE3C,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,UAAU,QAAQ,SAAS;AACpC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKpC;AACA,MAAMC,IAAI,GAAIC,KAAsB,IAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,aAAa,GAAIC,CAAmC,IAAK;IAC7DF,aAAa,CAACE,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;IACpC;AACJ;AACA;AACA;AACA;EACE,CAAC;;EAED,MAAMC,aAAa,GAAIH,CAAsC,IAAK;IAChEA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIT,KAAK,CAACI,aAAa,EAAE;MACvBJ,KAAK,CAACI,aAAa,CAACF,UAAU,CAAC;IACjC;IACA;IACA;EACF,CAAC;;EACD,MAAMQ,YAAY,GAAIC,KAAuB,IAAK;IAChD,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACnD;IACF;IACAT,aAAa,CAACQ,KAAK,CAAC;IACpBX,KAAK,CAACI,aAAa,IAAIJ,KAAK,CAACI,aAAa,CAACO,KAAK,CAAC;EACnD,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;AACF;AACA;AACA;AACA;AACA;AACA;EACE,oBACMb,OAAA;IAAKe,SAAS,EAAC,qCAAqC;IAAAC,QAAA,eAClDhB,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBhB,OAAA;QAAKe,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBhB,OAAA,CAACF,SAAS;UACRmB,WAAW,EAAE,OAAQ;UACrBC,QAAQ,EAAGC,QAAQ,IAAKd,aAAa,CAACc,QAAQ,CAAE;UAChDV,KAAK,EAAEL;QAAW;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACFvB,OAAA,CAACJ,MAAM;UACL4B,IAAI,EAAC,QAAQ;UACbC,IAAI,eAAEzB,OAAA,CAACH,UAAU;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACrBG,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAACR,UAAU;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGd,CAAC;AAAApB,EAAA,CArEKF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAuEV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}